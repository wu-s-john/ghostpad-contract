/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockUniswapPair,
  MockUniswapPairInterface,
} from "../MockUniswapPair";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_token0",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token1",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getReserves",
    inputs: [],
    outputs: [
      {
        name: "_reserve0",
        type: "uint112",
        internalType: "uint112",
      },
      {
        name: "_reserve1",
        type: "uint112",
        internalType: "uint112",
      },
      {
        name: "_blockTimestampLast",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setBalance",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "token0",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "token1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateReserves",
    inputs: [
      {
        name: "_reserve0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_reserve1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161035438038061035483398101604081905261002f9161009d565b600080546001600160a01b03199081166001600160a01b039485161790915560018054909116919092161790556103e860038190556004556005805463ffffffff19164263ffffffff161790556100cf565b80516001600160a01b038116811461009857600080fd5b919050565b600080604083850312156100af578182fd5b6100b883610081565b91506100c660208401610081565b90509250929050565b610276806100de6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630902f1ac146100675780630dfe1681146100875780633237bd001461009c57806370a08231146100b1578063d21220a7146100d1578063e30443bc146100d9575b600080fd5b61006f6100ec565b60405161007e93929190610207565b60405180910390f35b61008f610100565b60405161007e91906101f3565b6100af6100aa3660046101d2565b61010f565b005b6100c46100bf366004610188565b61012f565b60405161007e9190610237565b61008f610141565b6100af6100e73660046101a9565b610150565b60035460045460055463ffffffff16909192565b6000546001600160a01b031681565b6003919091556004556005805463ffffffff19164263ffffffff16179055565b60026020526000908152604090205481565b6001546001600160a01b031681565b6001600160a01b03909116600090815260026020526040902055565b80356001600160a01b038116811461018357600080fd5b919050565b600060208284031215610199578081fd5b6101a28261016c565b9392505050565b600080604083850312156101bb578081fd5b6101c48361016c565b946020939093013593505050565b600080604083850312156101e4578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6dffffffffffffffffffffffffffff938416815291909216602082015263ffffffff909116604082015260600190565b9081526020019056fea2646970667358221220adafbfb361723c9eaf6e936d8575cd939609d6e09aa47faeae6c7984aba2b66a64736f6c63430007060033";

type MockUniswapPairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapPairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapPair__factory extends ContractFactory {
  constructor(...args: MockUniswapPairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token0: AddressLike,
    _token1: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  override deploy(
    _token0: AddressLike,
    _token1: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token0, _token1, overrides || {}) as Promise<
      MockUniswapPair & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUniswapPair__factory {
    return super.connect(runner) as MockUniswapPair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapPairInterface {
    return new Interface(_abi) as MockUniswapPairInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapPair {
    return new Contract(address, _abi, runner) as unknown as MockUniswapPair;
  }
}
