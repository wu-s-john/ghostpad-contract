/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetadataVerifier,
  MetadataVerifierInterface,
} from "../MetadataVerifier";

const _abi = [
  {
    type: "function",
    name: "verifyProof",
    inputs: [
      {
        name: "proof",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "input",
        type: "uint256[2]",
        internalType: "uint256[2]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061016b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e1ff508214610030575b600080fd5b6100cb6004803603606081101561004657600080fd5b81019060208101813564010000000081111561006157600080fd5b82018360208201111561007357600080fd5b8035906020019184600183028401116401000000008311171561009557600080fd5b60408051808201825293959294929381830192909160029083908390808284376000920191909152509194506100df9350505050565b604080519115158252519081900360200190f35b60008261012b576040805162461bcd60e51b815260206004820152601560248201527450726f6f662063616e6e6f7420626520656d70747960581b604482015290519081900360640190fd5b506001939250505056fea2646970667358221220a6d4086a13ebb00318523dacb422ddbbc622c32ea2bafd83f159bc6983b1add364736f6c63430007060033";

type MetadataVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetadataVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetadataVerifier__factory extends ContractFactory {
  constructor(...args: MetadataVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MetadataVerifier> {
    return super.deploy(overrides || {}) as Promise<MetadataVerifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetadataVerifier {
    return super.attach(address) as MetadataVerifier;
  }
  override connect(signer: Signer): MetadataVerifier__factory {
    return super.connect(signer) as MetadataVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetadataVerifierInterface {
    return new utils.Interface(_abi) as MetadataVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetadataVerifier {
    return new Contract(address, _abi, signerOrProvider) as MetadataVerifier;
  }
}
