/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockUniswapFactory,
  MockUniswapFactoryInterface,
} from "../MockUniswapFactory";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_mockPair",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createPair",
    inputs: [
      {
        name: "tokenA",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenB",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "pair",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getPair",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mockPair",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102d03803806102d083398101604081905261002f9161008b565b6001600160a01b0381161561005e57600180546001600160a01b0319166001600160a01b038316179055610085565b600180546001600160a01b0319167312345678901234567890123456789012345678901790555b506100b9565b60006020828403121561009c578081fd5b81516001600160a01b03811681146100b2578182fd5b9392505050565b610208806100c86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632438678914610046578063c9c6539614610064578063e6a4390514610077575b600080fd5b61004e61008a565b60405161005b91906101be565b60405180910390f35b61004e61007236600461018c565b610099565b61004e61008536600461018c565b61014d565b6001546001600160a01b031681565b6001600160a01b03828116600090815260208181526040808320858516845290915281205490911661012457600180546001600160a01b038581166000818152602081815260408083208986168452825280832080546001600160a01b0319908116978716979097179055955482825286832093835292905293909320805490921692169190911790555b506001600160a01b03918216600090815260208181526040808320938516835292905220541690565b60006020818152928152604080822090935290815220546001600160a01b031681565b80356001600160a01b038116811461018757600080fd5b919050565b6000806040838503121561019e578182fd5b6101a783610170565b91506101b560208401610170565b90509250929050565b6001600160a01b039190911681526020019056fea2646970667358221220513b65b30ddb3cf671e962d4494a83d6911b1efbaf01e554f2bc5b9c79e77c5864736f6c63430007060033";

type MockUniswapFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapFactory__factory extends ContractFactory {
  constructor(...args: MockUniswapFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _mockPair: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_mockPair, overrides || {});
  }
  override deploy(
    _mockPair: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_mockPair, overrides || {}) as Promise<
      MockUniswapFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUniswapFactory__factory {
    return super.connect(runner) as MockUniswapFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapFactoryInterface {
    return new Interface(_abi) as MockUniswapFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapFactory {
    return new Contract(address, _abi, runner) as unknown as MockUniswapFactory;
  }
}
