/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockUniswapRouter,
  MockUniswapRouterInterface,
} from "../MockUniswapRouter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_factory",
        type: "address",
        internalType: "address",
      },
      {
        name: "_weth",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "WETH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addLiquidityETH",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountTokenDesired",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amountTokenMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amountETHMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountToken",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amountETH",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "calculateSwapAmount",
    inputs: [
      {
        name: "ethAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ethReserves",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "factory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mockPair",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setMockPair",
    inputs: [
      {
        name: "_mockPair",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTokenReserves",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapExactETHForTokens",
    inputs: [
      {
        name: "amountOutMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "path",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amounts",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "tokenReserves",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x6080604052678ac7230489e8000060045534801561001c57600080fd5b506040516107a83803806107a883398101604081905261003b916100ac565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691811691909117909155600280549091167312345678901234567890123456789012345678901790556100de565b80516001600160a01b03811681146100a757600080fd5b919050565b600080604083850312156100be578182fd5b6100c783610090565b91506100d560208401610090565b90509250929050565b6106bb806100ed6000396000f3fe6080604052600436106100915760003560e01c80637ff36ab5116100595780637ff36ab51461015057806397adce1c14610170578063ad5c464814610185578063c45a01551461019a578063f305d719146101af57610091565b806324386789146100965780633c15310c146100c1578063429f2b6a146100ee578063561e3af914610110578063798e603b14610130575b600080fd5b3480156100a257600080fd5b506100ab6101d1565b6040516100b891906105b1565b60405180910390f35b3480156100cd57600080fd5b506100e16100dc3660046104f4565b6101e0565b6040516100b89190610666565b3480156100fa57600080fd5b5061010e610109366004610453565b610237565b005b34801561011c57600080fd5b5061010e61012b366004610474565b610259565b34801561013c57600080fd5b506100e161014b366004610453565b610275565b61016361015e36600461051f565b610287565b6040516100b891906105c5565b34801561017c57600080fd5b506100e16103e3565b34801561019157600080fd5b506100ab6103e9565b3480156101a657600080fd5b506100ab6103f8565b6101c26101bd36600461049d565b610407565b6040516100b89392919061066f565b6002546001600160a01b031681565b6004546001600160a01b03821660009081526003602052604081205490919081029084018281838161020e57fe5b6001600160a01b0387166000908152600360205260409020549190049003935050505092915050565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03909116600090815260036020526040902055565b60036020526000908152604090205481565b606060028410156102b35760405162461bcd60e51b81526004016102aa90610640565b60405180910390fd5b6001546001600160a01b031685856000816102ca57fe5b90506020020160208101906102df9190610453565b6001600160a01b0316146103055760405162461bcd60e51b81526004016102aa90610609565b60008585600181811061031457fe5b90506020020160208101906103299190610453565b9050600061033734836101e0565b60048054340190556001600160a01b03831660009081526003602052604090208054829003905590508567ffffffffffffffff8111801561037757600080fd5b506040519080825280602002602001820160405280156103a1578160200160208202803683370190505b50925034836000815181106103b257fe5b60200260200101818152505080836001815181106103cc57fe5b602002602001018181525050505095945050505050565b60045481565b6001546001600160a01b031681565b6000546001600160a01b031681565b505050506001600160a01b039190911660009081526003602052604090208190553460048190559091620f424090565b80356001600160a01b038116811461044e57600080fd5b919050565b600060208284031215610464578081fd5b61046d82610437565b9392505050565b60008060408385031215610486578081fd5b61048f83610437565b946020939093013593505050565b60008060008060008060c087890312156104b5578182fd5b6104be87610437565b95506020870135945060408701359350606087013592506104e160808801610437565b915060a087013590509295509295509295565b60008060408385031215610506578182fd5b8235915061051660208401610437565b90509250929050565b600080600080600060808688031215610536578081fd5b85359450602086013567ffffffffffffffff80821115610554578283fd5b818801915088601f830112610567578283fd5b813581811115610575578384fd5b8960208083028501011115610588578384fd5b6020830196508095505050506105a060408701610437565b949793965091946060013592915050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156105fd578351835292840192918401916001016105e1565b50909695505050505050565b60208082526019908201527f50617468206d7573742073746172742077697468205745544800000000000000604082015260600190565b6020808252600c908201526b092dcecc2d8d2c840e0c2e8d60a31b604082015260600190565b90815260200190565b928352602083019190915260408201526060019056fea2646970667358221220cc0148d017406b08b20bd9d51c3a4f56b0c0197db6267646f1be6c4a894795a364736f6c63430007060033";

type MockUniswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapRouter__factory extends ContractFactory {
  constructor(...args: MockUniswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factory, _weth, overrides || {});
  }
  override deploy(
    _factory: AddressLike,
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factory, _weth, overrides || {}) as Promise<
      MockUniswapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUniswapRouter__factory {
    return super.connect(runner) as MockUniswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapRouterInterface {
    return new Interface(_abi) as MockUniswapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapRouter {
    return new Contract(address, _abi, runner) as unknown as MockUniswapRouter;
  }
}
